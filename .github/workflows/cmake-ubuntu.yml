name: CMake Ubuntu

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
        matrix:
            build_movies: [movies_on, movies_off]
            build_mdview: [mdview_on, mdview_off]
            build_rest: [rest_on, rest_off]

            include:
                - movies_packages:
                - movies_build_flag: off

                - movies_packages: libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
                  build_movies: movies_on
                - movies_build_flag: on
                  build_movies: movies_on

                - mdview_packages:
                - mdview_build_flag: off

                - mdview_packages: libwebkit2gtk-4.0-dev libmarkdown2-dev
                  build_mdview: mdview_on
                - mdview_build_flag: on
                  build_mdview: mdview_on

                - rest_packages:
                - rest_build_flag: off

                - rest_packages: libsoup2.4-dev libqrencode-dev libmarkdown2-dev
                  build_rest: rest_on
                - rest_build_flag: on
                  build_rest: rest_on

    steps:
    - uses: actions/checkout@v3

    - name: requirements
      run: |
        sudo apt update
        sudo apt -y install cmake valac libunwind-dev libgee-0.8-dev libpoppler-glib-dev libgtk-3-dev libjson-glib-dev ${{ matrix.movies_packages }} ${{ matrix.mdview_packages }} ${{ matrix.rest_packages }}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMOVIES=${{ matrix.movies_build_flag }} -DMDVIEW=${{ matrix.mdview_build_flag }} -DREST=${{ matrix.rest_build_flag }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
