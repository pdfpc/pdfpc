name: CMake Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-vala       
          mingw-w64-x86_64-libgee
          mingw-w64-x86_64-poppler
          mingw-w64-x86_64-gtk3
          mingw-w64-x86_64-gstreamer
          mingw-w64-x86_64-gst-plugins-base
          mingw-w64-x86_64-json-glib
          mingw-w64-x86_64-libsoup3
          mingw-w64-x86_64-qrencode
          mingw-w64-x86_64-discount
          mingw-w64-x86_64-imagemagick
          mingw-w64-x86_64-gst-plugins-good
          mingw-w64-x86_64-gst-plugin-gtk

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_MAKE_PROGRAM=ninja -DMDVIEW=OFF

    - name: Build
      run: cd build && ninja

    - name: Package
      working-directory: build
      shell: powershell
      run: |
        cpack -G NSIS
        cpack -G 7Z
        rm -Recurse -Force packaged/_CPack_Packages

    - name: Upload Packages
      uses: actions/upload-artifact@v4
      with:
        # this will upload _one_ ZIP file
        name: packages
        path: build/packaged/*
