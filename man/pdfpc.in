.TH  PDFPC 1
.if !dURL \{\
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.\}
.if \n[.g] .mso www.tmac

.SH NAME
pdfpc \- PDF presenter console with multi-monitor support

.SH SYNOPSIS
.B pdfpc
[options] PDF-file

.SH DESCRIPTION
.PP
pdfpc is a GTK-based presentation viewer which uses Keynote-like multi-monitor
output to provide meta information to the speaker during the presentation. It
is able to show a normal presentation window on one screen while showing a more
sophisticated overview on the other one, providing information like a picture
of the next slide, as well as the time left in the presentation. pdfpc
processes PDF documents, which can be created using nearly all modern
presentation software.
.PP
By default the presenter view appears in the primary monitor and the
presentation view in the second monitor (provided you have two
monitors).

.SH OPTIONS
.TP
.BI "\-c, \-\-disable\-cache"
Disable caching and pre-rendering of slides to save memory at the cost of speed.
.TP
.BI "\-C, \-\-time\-of\-day
Display the time of the day
.TP
.BI "\-d, \-\-duration"=N
Duration in minutes of the presentation used for timer display. If not given or
if a value of 0 is specified, the clock just measures the time in the
presentation.
.TP
.BI "\-e, \-\-end\-time"=T
End time of the presentation. (Format: HH:MM (24h))
.TP
.BI "\-g, \-\-disable\-auto\-grouping"
Disable auto detection of overlay groups. (Default: enabled)
.TP
.BI "\-h, \-\-help"
Show this help
.TP
.BI "\-l, \-\-last\-minutes"=N
Time in minutes, from which on the timer changes its color. (Default: 5 minutes)
.TP
.BI "\-L, \-\-list\-actions"
List actions supported in the config file(s)
.TP
.BI "\-n, \-\-notes"=P
Position of notes on the PDF page. Position can be either left, right, top or bottom. Disable slide auto-grouping (Default: none)
.TP
.BI "\-p, \-\-persist\-cache"
Persist the PNG cache on disk for faster startup.
.TP
.BI "\-P, \-\-page"
Go to a specific page directly after startup. In case of overlays, the first slide will be displayed.
.TP
.BI "\-R, \-\-pdfpc\-location"=LOCATION
Use custom pdfpc file.
.TP
.BI "\-1, \-\-presenter\-screen"=OUTPUT
Screen to be used for the presenter (output name, see e.g. "xrandr --listmonitors").
.TP
.BI "\-2, \-\-presentation\-screen"=OUTPUT
Screen to be used for the presentation (output name).
.TP
.BI "\-s, \-\-switch\-screens"
Switch the presentation and the presenter screen.
.TP
.BI "\-S, \-\-single\-screen"
Force to use only one screen
.TP
.BI "\-t, \-\-start\-time"=T
Start time of the presentation to be used as a countdown. (Format: HH:MM (24h))
.TP
.BI "\-W, \-\-wayland\-workaround"
Enable Wayland-specific workaround. This might fix HiDPI scaling problems.
.TP
.BI "\-w, \-\-windowed"
Run in windowed mode
.TP
.BI "\-z, \-\-disable\-compression"
Disable the compression of slide images to trade memory consumption for speed.
(Avg.  factor 30)
.TP
.BI "\-Z, \-\-size"
Size of the presentation window in width:height format (forces windowed mode)

.SH KEYBINDINGS
These are the default keybindings for pdfpc:
.TP
.B Right cursor key / Down cursor key / Page down / Return / Space / 1st mouse button / Mouse wheel down
Go forward one slide
.TP
.B Left cursor key / Up cursor key / Page up / Backspace / 3rd mouse button / Mouse wheel up
Go back one slide
.TP
.B Shift + Page down
Go forward one user slide (see \fBOverlays\fR below)
.TP
.B Shift + Page up
Go back one user slide (see \fBOverlays\fR below)
.TP
.B Shift + Right cursor key / 1st mouse button / Mouse wheel down
Go forward 10 slides
.TP
.B Shift + Left cursor key / 3rd mouse button / Mouse wheel up
Go back 10 slides
.TP
.B Home
Go to the first slide
.TP
.B End
Go to the last slide
.TP
.B Shift + Backspace
Go back in history. Note that history is defined by "jump" commands, not by
normal slide movement.
.TP
.B Shift + Home / Shift + End
Go to the previous / next slide, skipping over overlays that have already been
viewed, but at most one user slide.
.TP
.B Tab / 2nd mouse button
Overview mode
.TP
.B g
Input a slide number to jump to
.TP
.B m
Bookmark the current slide and store it in the \fB.pdfpc\fR file for later usage
.TP
.B Shift + m
Load the bookmarked slide which was saved with \fBm\fR before
.TP
.B t
Toggle the toolbox
.TP
.B 1 / KP_1
Switch to the normal mode (pen/eraser and pointer are off)
.TP
.B 2 / KP_2
Switch the pointer mode on
.TP
.B 3 / KP_3
Switch the pen drawing mode on
.TP
.B 4 / KP_4
Switch the eraser drawing mode on
.TP
.B Plus / KP_Add / Equal
Depending on the current mode, increase font size of notes or pointer size or
the size of pen or eraser
.TP
.B Minus / KP_Subtract
Depending on the current mode, decrease font size of notes or pointer size or
the size of pen or eraser
.TP
.B c
Clear the drawing on the current page
.TP
.B d
Toggle visibility the drawings; if in the drawing mode (pen/eraser), exit it
.TP
.B Shift + 1 / KP_1 ... Shift + 8 / KP_8
Switch the drawing color to red/orange/yellow/green/blue/violet/black/white,
respectively.
.TP
.B f
Freeze the current presentation display (the presenter display is still
fully active)
.TP
.B b
Turn off the presentation view (i.e.  fill it with a black color)
.TP
.B h
Hide the presentation window (i.e. make other windows on the other screen
visible)
.TP
.B Escape
Exit any "special" state (pause, freeze, blank)
.TP
.B Ctrl + n
Edit notes for the current slide (press Escape to exit this mode)
.TP
.B s
Start timer
.TP
.B p
Pause timer
.TP
.B Ctrl + t
Reset timer
.TP
.B Ctrl + o
Toggle the overlay flag for one particular slide (see Overlays
below)
.TP
.B Ctrl + e
Define end slide
.TP
.B Ctrl + q
Exit pdfpc
.P
Within the overview mode, the following key bindings are used:
.TP
.B Return / 1st mouse button
Go to currently selected page (last page of overlay)
.TP
.B Shift + Return / Shift + 1st mouse button
Go to currently selected page (first page of overlay)
.TP
.B Cursor left / Page up
Select previous slide
.TP
.B Cursor right / Page down
Select next slide

.P
See \fBpdfpcrc\fR(5) if you want to customize the keybindings.

.SH FEATURES

.SS Caching / Pre-rendering

.PP
To allow fast changes between the different slides of the presentation the PDF
pages are pre-rendered to memory.  The progress bar on the bottom of the
presenter screen indicates how many percent of the slides have been
pre-rendered already.  During the initial rendering phase this will slow down
slide changes, as most CPU power is used for the rendering process in the
background.  After the cache is fully primed, however, the changing of slides
should be much faster, as with normal PDF viewers.

.PP
As the pre-rendering takes a lot of memory it can be disabled using the
\-\-disable\-cache switch at the cost of speed.

.PP
It it also possible to store the pre-rendered slides on the disk (see
\-\-persist-cache).  This speeds up the start of the program if the slide set
is used next time unchanged.

.SS Cache compression

.PP
The pre-rendered and cached slides can be compressed in memory to save up some
memory.  Without compression a set of about 100 PDF pages can easily grow up to
about 1.5 GB size.  Netbooks with only 1 GB of memory would swap heavily
if pre-rendering is enabled in such a situation.  The compression is
enabled by default as it does not harm rendering speed in a noticeable way on
most systems. It does, however, slow down pre-rendering by about a factor of
two. If you have got enough memory and want to ensure the fastest possible
pre-rendering you can disable slide compression by using the \-z switch. But be
warned that using the uncompressed pre-rendering storage will use about 30 times
the memory the new compressed storage utilizes (e.g. 50 MB will become about
1.5 GB).

.SS Timer
.PP
If a duration is given (\-d option), the timer will show a countdown with the
given parameters.  If no duration is specified (or if a value of 0 is given to
the \-d option), the timer will show how much time has been spent.  The duration
is stored automatically, so you do not need to repeat it for every invocation.
.PP
The timer is started if you are navigating away from the first page for the
first time.  This feature is quite useful as you may want to show the title page
of your presentation while people are still entering the room and the
presentation has not really begun yet.  If you want to start over you can
use the \[aq]r\[aq] key which will make the presenter reset the timer.
.PP

If a duration is given, the timer also provides hints aiding the presenter to
judge whether the talk would end on time.  There are two modes in which pdfpc
can operate.  In the old (and the only one available up to, and including
pdfpc-4.0.8) mode, at the moment the timer reaches the defined last-minutes
value it will change color to indicate your talk is nearing its end, thus
mimicking a chairman frantically pantomiming in front of you with five (four,
three, ...) fingers up.  A drawback of this approach is it is often
too late at that moment to alter the presentation pace without ruining to some
extent the rest of the talk.  On the other hand, the warning indication provides
an unnecessary distraction if you have been perfectly conveying the talk and the
remaining time is adequate.
.PP
Contrary to that, in the new (default) mode, pdfpc tracks your progress
continuously, calculating the expected time as
(talk_duration)*(current_user_slide_number - 0.5)/(total_number_of_user_slides)
and comparing it to the actual wall time since beginning of the talk.  If
these two numbers differ by more than 60 seconds, the timer changes its color to
either orange (indicating you need to speed up) or a blueish one (need to slow
down).  Once the optimal progress is recovered, the timer becomes white again.
In this mode, the last-minutes option (-l) has no effect.  The previous
behavior can be restored by setting the 'timer-pace-color' option to 'false' in
the configuration file, see
.B pdfpcrc(5).
.PP
In any case as soon as the timer reaches the zero mark (00:00:00), it will turn red
and count further down showing a negative time, to provide information on how
many minutes you are overtime.

.SS Notes

.PP
Textual notes can be displayed for each slide.  A few types of PDF annotations
are understood by pdfpc and will be automatically imported and displayed (only
their textual content, no formatting attributes are preserved).  The PDF
annotations can be made using many PDF editors and even viewers.  These "native"
PDF notes cannot be edited in pdfpc.
.PP
In addition, while in the presentation mode, pressing \[aq]n\[aq] will allow you
to take notes for the current user slide.  To exit the note editing mode, press
the Escape key.  Note that while editing a note, the keybindings stop working,
i.e. you are not able to change slides. These notes are stored in the .pdfpc
file in a plain text format, easy to edit also from outside the program; see
the section about the pdfpc format below.  These notes take precedence over the
native PDF annotations, i.e., if a user-proveded note exists for a given slide,
any PDF annotations on that page will be silently ignored.
.PP
Although mixing the
two types of notes is possible, for a given presentation one will likely want to
have either only the "native" notes (produced by the same PDF authoring software
used for making the slides), or only the "pdfpc" ones.

.SS Overview mode

.PP
Pressing the Tab key enters the overview mode, where thumbnails of the slides
are shown in a grid.  You can select a slide to jump to with the mouse or with
the arrow keys.  You can also define overlays and the end slide (see next
sections) in this mode.

.SS Overlays

.PP
Many slide preparation systems allow for overlays, i.e.  sets of slides that
are logically grouped together as a single, changing slide.  Examples include
enumerations where bullet items are displayed one after another, or rough
"animations", where parts of a picture change from slide to slide. Pdfpc
includes facilities for dealing with such overlays.

.PP
In this description, we will differentiate between slides (i.e.  pages in the
PDF document) and "user slides", that are the logical slides.  The standard
forward movement command (page down, enter, etc.) moves through one slide at a
time, as expected.  This means that every step in the overlay is traversed.
The backward movement command works differently depending on whether the
current and previous slides are part of an overlay:

.IP \[bu] 2
If the current slide is part of an overlay we just jump to the previous slide.
That means that we are in the middle of an overlay and can jump forward and
backward through the single steps of it
.IP \[bu] 2
If the current slide is not part of an overlay (or if it is the first one), but
the previous slides are, we jump to the previous user slide.  This means that
when going back in the presentation you do not have to go through every step of
the overlay, pdfpc just shows the first slide of each
overlay.  As one typically goes back in a presentation only when looking for a
concrete slide, this is more convenient.

.PP
The up and down cursor keys work on the "user slide" basis.
You can use them to skip the rest of an overlay or to jump to the
previous user slide, ignoring the state of the current slide.

.PP
When going through an overlay, two additional previews may be activated
in the presenter view, just below the main view, showing the next and
the previous slide in an overlay.

.PP
Pdfpc tries to find these overlays automatically by looking
into the page labels in the PDF file.  For LaTeX this works correctly at least
with the beamer class and also modifying the page numbers manually (compiling
with pdflatex).  If your preferred slide-producing method does not work
correctly with this detection, you can supply this information using the \[aq]o\[aq] key
for each slide that is part of an overlay (except the first one!).  The page
numbering is also adapted.  This information is automatically stored.

.SS End slide
.PP
Some people like to have some additional, backup slides after the last
slide in the actual presentation.
Things like bibliographic references or slides referring to specialized
questions are typical examples.
Pdfpc lets you define which is the last slide in the
actual presentation via the \[aq]e\[aq] key.
This just changes the progress display in the presenter screen, as to
have a better overview of how many slides are left.

.SS Movies
.PP
Pdfpc can play back movies included in the PDF file.  Movies may be started
and stopped by clicking within their area.  For the presenter, a progress
bar is drawn along the bottom of the movie.  This expands when the mouse
hovers over it, allowing one to seek by clicking or dragging within the
progress bar.  Switching slides automatically stops playback, and movies
will be reset after leaving and returning to a slide.

.PP
Movies may be included in PDF files as "screen annotations".  pdfpc does
not yet support options that modify the playback of these movies.  In LaTeX,
such movies may be added to a presentation with the "movie15" or "multimedia"
package. Note that the poster, autoplay, and repeat options are not yet
supported. (Also, run ps2pdf with the \-dNOSAFER flag.)

.PP
As a perhaps simpler option, pdfpc will play back movies linked from a
hyperlink of type "launch".  A query string may be added to the URL of the
movie to enable the "autostart", "loop" and "noprogress" properties, if
necessary.  (E.g., a link to "movie.avi?autostart&loop&noprogress" will add a
video that starts playing automatically, loops when it reaches the end, and
does not show the progress bar.)

In LaTeX, such links are created with

.RS
\\usepackage{hyperref}
.br
\\href{run:<movie file>}{<placeholder content>}
.RE

.PP
The movie will playback in the area taken by the placeholder content.  Using
a frame of the movie will ensure the correct aspect ratio.

.PP
See
.URL http://pdfpc.github.io/demo/pdfpc-video-example.zip "our website"
for a full example.

.PP
See the bugs section for further information.

.SS Pointer mode
.PP
If needed, it is possible to turn on a pointer which draws a red dot in the
place pointed by mouse cursor on both - presenter and presentation screens.
It is also possible to increase and decrease the pointer size. Additionally,
when the pointer is enabled, it is possible to highlight some area of the
current slide using the drag mouse motion. The area
outside the selected region will be dimmed.

.SS Drawing mode
.PP
It is possible to turn on a mode which allows drawing over slides with the mouse
cursor or a connected tablet.  When drawing mode is enabled, drawings can be made on
the presenter screen. A separate drawing will be kept in memory for each slide
(based on user slide numbers, so consolidating overlay slides). Drawings are presently not
saved between sessions.

In the drawing mode, there are two drawing tools, a pen and an eraser. An indicator in the
bottom-left corner of the presenter screen will indicate which is active. When in the pen mode,
the color and size of the pen will be indicated by the cursor. The pen size can be increased
or decreased using hot keys specified in the key bindings. When the eraser tool is active,
the size of the cursor indicates the amount to erase.

The color of the pen can be changed through key or mouse bindings.

If you are using a tablet, the pen or eraser tool will be selected based on whether the tablet
reports a pen or eraser input device is being used, overriding the normal selection of the drawing tool.

.SS pdfpc files
.PP
Some additional information is stored in a file with the extension
"pdfpc".  When pdfpc is invoked with a PDF file, it automatically checks for
and loads the associated .pdfpc file, if it exists.  This means that you
normally do not have to deal with this kind of files explicitly.
.PP
Beside internal configuration, the following command-line
options are stored within the pdfpc file for later usage:

.IP \[bu] 2
duration
.IP \[bu] 2
end_time
.IP \[bu] 2
last_minutes
.IP \[bu] 2
notes (position)
.IP \[bu] 2
start_time

.PP
There are, however, cases where you may want to edit this file manually.
The most typical case is if you add or remove some slides after you have
edited notes or defined overlays.
It may be quicker to edit the pdfpc file than to re-enter the whole
information.

.PP
There is also the possibility of including notes from a different file.
If pdfpc encounters a [notes_include] section with the .pdfpc file
it reads the notes
.B
only
from the included file. Changing notes within pdfpc is then forbidden.

.PP
The files are plain-text files that should be fairly self-explanatory.
A couple of things to note:
.IP \[bu] 2
The slide numbers of the notes refer to user slides
.IP \[bu] 2
Slide indexes start at 1

.SS Appearance

.PP
With GTK3 it is possible to modify the appearance of pdfpc. There are two
locations where pdfpc is looking for files. The default location is
@CMAKE_INSTALL_PREFIX@/share/pixmaps/pdfpc/pdfpc.css. It can be copied
to $XDG_CONFIG_HOME/pdfpc/pdfpc.css and modified to the user's liking.

.SS Desktop integration

.PP
Pdfpc provides a DBus interface that appears on the session bus as
\fIio.github.pdfpc\fR. Other applications can, in particular, execute any action
listed by \fB--list-actions\fR. It is also possible to control pdfpc from the
command line (and write shell scripts) using the \fBdbus-send\fR(1) utility. For
example, to advance to the next slide, run

dbus-send --type=method_call --session --dest=io.github.pdfpc
 /io/github/pdfpc io.github.pdfpc.TriggerAction string:next

In addition to the \fBTriggerAction\fR method, the pdfpc DBus interface exposes
the \fBGetNotes\fR method, three properties (\fBNumberOfOverlays\fR,
\fBNumberOfSlides\fR, \fBUrl\fR) and two signals (\fBOverlayChange\fR and
\fBSlideChange\fR).

.SH BUGS

.PP
Bugs can be reported at
.URL https://github.com/pdfpc/pdfpc/issues "our issue tracker" .

.PP
The LaTeX package "hyperref" produces buggy results when using with
beamer notes. It is recommended to use the "multimedia" package
instead.

.SH ACKNOWLEDGEMENTS
pdfpc was previously developed by
.URL https://github.com/davvil/pdfpc "davvil" .

pdfpc is a fork of Pdf Presenter Console, available
.URL https://github.com/jakobwesthoff/Pdf-Presenter-Console "online" .

.SH SEE ALSO
.PP
\fBpdfpcrc\fR(5)

There are several other programs with similar functionality.

.BR impressive (1)
has nice transition effects.

.BR hpdfp (1)
is the
.URL http://michaeldadams.org/projects/haskell-pdf-presenter/ "Haskell PDF Presenter"
program, which packs an amazing level of functionality into not many lines of Haskell.

.BR pympress (1)
is a little
.URL https://github.com/Cimbali/pympress "PDF reader written in Python"
which handles dual screens and beamer notes.

.BR dspdfviewer (1)
is also specialized for beamer-produced wide PDF with notes.

Many PDF viewers have full-screen presentation modes, but without dual-monitor preview or notes or a timer. These include
.BR zathura (1),
.BR evince (1),
and
.BR okular (1).
